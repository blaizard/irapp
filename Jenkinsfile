#!/usr/bin/env groovy
/**
 * It requires the following Jenkins plugins to work:
 * - Warnings Next Generation
 * - JUnit Plugin
 * - valgrind
 */
pipeline {
	agent none
	stages
	{
			/**
			 * This step is to ensure that the dockerfile is generated by only 1 worker to avoid
			 * multiple jobs to do the same operation.
			 */
			stage('Setup debian')
			{
				agent
				{
					dockerfile
					{
						filename 'assets/debian.dockerfile'
					}
				}
				stages
				{
					stage('Setup debian Completed')
					{
						steps
						{
							echo 'Setup debian Completed'
						}
					}
				}
			}
			/**
			 * The actual tests are done here
			 */
			stage('Test debian')
			{
				parallel
				{
						stage('debian.python.v2.7')
						{
							agent
							{
								dockerfile
								{
									filename 'assets/debian.dockerfile'
								}
							}
							stages
							{
								stage('Build debian.python.v2.7')
								{
									steps
									{
										sh './app.py init'
										sh './app.py build  -c python:v2.7 '
									}
								}
									stage('Test debian.python.v2.7')
									{
										steps
										{
												sh "./app.py run  --cmd 'python2.7 tests/unit/testShell.py'  --cmd 'python2.7 tests/unit/testModules.py'  --cmd 'python2.7 tests/endtoend/testCMake.py'  --cmd 'python2.7 tests/endtoend/testDispatch.py'  -j0"
										}
									}
							}
							post
							{
								always
								{
									// This is needed to avoid an error if there are no steps in this block
									echo 'Post platform debian.python.v2.7'
								}
							}
						}
						stage('debian.python.v3')
						{
							agent
							{
								dockerfile
								{
									filename 'assets/debian.dockerfile'
								}
							}
							stages
							{
								stage('Build debian.python.v3')
								{
									steps
									{
										sh './app.py init'
										sh './app.py build  -c python:v3 '
									}
								}
									stage('Test debian.python.v3')
									{
										steps
										{
												sh "./app.py run  --cmd 'python3 tests/unit/testShell.py'  --cmd 'python3 tests/unit/testModules.py'  --cmd 'python3 tests/endtoend/testCMake.py'  --cmd 'python3 tests/endtoend/testDispatch.py'  -j0"
										}
									}
							}
							post
							{
								always
								{
									// This is needed to avoid an error if there are no steps in this block
									echo 'Post platform debian.python.v3'
								}
							}
						}
				}
			}
	}
}